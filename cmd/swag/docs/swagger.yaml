basePath: /v1
definitions:
  authcommandrequest.SaveAccountRequest:
    properties:
      birthday:
        description: Ngày sinh (optional), định dạng yyyy-mm-dd
        type: string
      confirm_pass:
        description: Xác nhận password phải giống Password
        type: string
      email:
        description: Email bắt buộc và phải đúng định dạng
        type: string
      gender:
        description: 'Giới tính: 0=male, 1=female, 2=other'
        enum:
        - 0
        - 1
        - 2
        type: integer
      name:
        description: Tên người dùng
        type: string
      password:
        description: Password tối thiểu 8 ký tự
        minLength: 8
        type: string
      phone:
        description: Số điện thoại (optional, theo chuẩn E.164)
        type: string
      token:
        description: token đăng kí thông tin người dùng
        type: string
    required:
    - confirm_pass
    - email
    - name
    - password
    - token
    type: object
  authcommandrequest.UserRegistratorRequest:
    properties:
      email:
        type: string
      purpose:
        description: TEST_USER, CUSTOMER, ADMIN, etc.
        type: string
    required:
    - email
    - purpose
    type: object
  authcommandrequest.VerifyOTPRequest:
    properties:
      email:
        type: string
      otp:
        type: string
    required:
    - email
    - otp
    type: object
  response.ErrorResponseData:
    properties:
      code:
        type: integer
      detail: {}
      error:
        type: string
      success:
        type: boolean
    type: object
  response.ResponseData:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8002
info:
  contact:
    email: tipsgo@gmail.com
    name: TEAM TIPSGO
    url: github.com/anonystick/go-ecommerce-backend-go
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: github.com/anonystick/go-ecommerce-backend-go
  title: API Documentation Ecommerce Backend SHOPDEVGO
  version: 1.0.0
paths:
  /auth/register:
    post:
      consumes:
      - application/json
      description: When user is registered send otp to email
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authcommandrequest.UserRegistratorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: User Registration
      tags:
      - account management
  /auth/save-account:
    post:
      consumes:
      - application/json
      description: When user has registered send otp to email
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authcommandrequest.SaveAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: User Base Registration
      tags:
      - account management
  /auth/verify-account:
    post:
      consumes:
      - application/json
      description: When user is verified otp from email
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authcommandrequest.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Verify OTP
      tags:
      - account management
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Returns user details data based on ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Get user details by ID
      tags:
      - user
swagger: "2.0"
