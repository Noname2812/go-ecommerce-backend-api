basePath: /v1
definitions:
  authcommandrequest.SaveAccountRequest:
    properties:
      birthday:
        description: birthday
        type: string
      confirm_pass:
        description: confirm password
        type: string
      email:
        description: email
        type: string
      gender:
        description: gender
        enum:
        - 0
        - 1
        - 2
        type: integer
      name:
        description: name
        type: string
      password:
        description: password
        minLength: 8
        type: string
      phone:
        description: phone
        type: string
      token:
        description: token
        type: string
    required:
    - confirm_pass
    - email
    - name
    - password
    - token
    type: object
  authcommandrequest.UserRegistratorRequest:
    properties:
      email:
        description: email
        type: string
      purpose:
        description: purpose (TEST_USER, CUSTOMER, ADMIN, etc.)
        enum:
        - TEST_USER
        - CUSTOMER
        - ADMIN
        type: string
    required:
    - email
    - purpose
    type: object
  authcommandrequest.VerifyOTPRequest:
    properties:
      email:
        description: email
        type: string
      otp:
        description: otp
        type: string
    required:
    - email
    - otp
    type: object
  response.ErrorResponseData:
    properties:
      code:
        type: integer
      errors:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
    type: object
  response.ResponseData:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  transportationqueryresponse.GetListTripsResponse:
    properties:
      page:
        type: integer
      total:
        type: integer
      trips:
        items:
          $ref: '#/definitions/transportationqueryresponse.Trip'
        type: array
    type: object
  transportationqueryresponse.Trip:
    properties:
      arrival_date:
        type: string
      departure_date:
        type: string
      from_location:
        type: string
      id:
        type: integer
      price:
        type: number
      to_location:
        type: string
    type: object
host: localhost:8002
info:
  contact:
    email: tipsgo@gmail.com
    name: TEAM TIPSGO
    url: github.com/anonystick/go-ecommerce-backend-go
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: github.com/anonystick/go-ecommerce-backend-go
  title: API Documentation Ecommerce Backend SHOPDEVGO
  version: 1.0.0
paths:
  /auth/register:
    post:
      consumes:
      - application/json
      description: When user is registered send otp to email
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authcommandrequest.UserRegistratorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: User Registration
      tags:
      - auth management
  /auth/save-account:
    post:
      consumes:
      - application/json
      description: When user has registered send otp to email
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authcommandrequest.SaveAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: User Base Registration
      tags:
      - auth management
  /auth/verify-account:
    post:
      consumes:
      - application/json
      description: When user is verified otp from email
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authcommandrequest.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Verify OTP
      tags:
      - auth management
  /transportation/search-trips:
    get:
      consumes:
      - application/json
      description: Get list trips
      parameters:
      - description: Departure date
        in: query
        name: departure_date
        required: true
        type: string
      - description: From location
        in: query
        name: from_location
        required: true
        type: string
      - description: To location
        in: query
        name: to_location
        required: true
        type: string
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Page size (default 10)
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ResponseData'
            - properties:
                data:
                  $ref: '#/definitions/transportationqueryresponse.GetListTripsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Get list trips
      tags:
      - Transportation
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Returns user details data based on ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Get user details by ID
      tags:
      - user
swagger: "2.0"
