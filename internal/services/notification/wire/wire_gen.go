// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package notificationwire

import (
	"github.com/Noname2812/go-ecommerce-backend-api/internal/services/notification/application/messaging"
	"github.com/Noname2812/go-ecommerce-backend-api/internal/services/notification/infrastructure/messaging"
	"github.com/Noname2812/go-ecommerce-backend-api/internal/services/notification/infrastructure/service"
	"github.com/Noname2812/go-ecommerce-backend-api/pkg/kafka"
	"github.com/Noname2812/go-ecommerce-backend-api/pkg/setting"
	"go.uber.org/zap"
)

// Injectors from notification_wire.go:

func InitNotificationConsumer(kafkaManager *kafka.Manager, logger *zap.Logger, config *setting.EmailSetting) notificationmessaging.NotificationConsumer {
	emailService := notificationserviceimpl.NewNotificationService(config, logger)
	notificationConsumer := notificationmessagingimpl.NewNotificationConsumer(kafkaManager, logger, emailService)
	return notificationConsumer
}
